{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasher/Desktop/workspace/virtual-machine-configuration/src/StorageNetwork.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ButtonPair from './ButtonPair';\nimport StorageBlock from './StorageBlock';\nimport './StorageNetwork.css';\n\nfunction StorageNetwork(props) {\n  _s();\n\n  const [currentForm, setCurrentForm] = useState({\n    storage: [{\n      type: \"SSD\",\n      volume: \"root\",\n      capacity: 50,\n      encrypted: false,\n      iops: 100,\n      backup: false,\n      remarks: \"\"\n    }],\n    network: -1\n  });\n\n  function handleform() {\n    props.handleform(currentForm);\n  }\n\n  function deletestorage(event) {\n    let list = [...currentForm.storage];\n    list = list.slice(event.target.value, 1);\n    setCurrentForm({ ...currentForm,\n      storage: list\n    });\n  }\n\n  function addVolume() {\n    let list = [...currentForm.storage];\n    let element = {\n      type: \"SSD\",\n      volume: \"ext\",\n      capacity: 50,\n      encrypted: false,\n      iops: 100,\n      backup: false,\n      remarks: \"\"\n    };\n    list;\n    setCurrentForm({ ...currentForm,\n      storage: list\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentForm.storage.map((i, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postion\",\n      children: [/*#__PURE__*/_jsxDEV(StorageBlock, {\n        form: currentForm,\n        index: key,\n        setCurrentForm: setCurrentForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: i.volume !== \"root\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cross-btn\",\n          value: \"0\",\n          onClick: deletestorage,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volume\",\n        onClick: addVolume,\n        children: \"Add Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading-network\",\n        children: \"Network Bandwidth Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"data\",\n        children: \"Outbounded Traffic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slidecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"100\",\n          value: \"50\",\n          className: \"slider\",\n          id: \"myRange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-range\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"256GB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2TB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonPair, {\n        firsttext: \"Back\",\n        firstfunction: props.resetPrev,\n        secondtext: \"Proceed\",\n        secondfunction: handleform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n}\n\n_s(StorageNetwork, \"945hJjiIEHHrIVwao3tUUzhFUmc=\");\n\n_c = StorageNetwork;\nexport default StorageNetwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"StorageNetwork\");","map":{"version":3,"sources":["/home/hasher/Desktop/workspace/virtual-machine-configuration/src/StorageNetwork.tsx"],"names":["React","useState","ButtonPair","StorageBlock","StorageNetwork","props","currentForm","setCurrentForm","storage","type","volume","capacity","encrypted","iops","backup","remarks","network","handleform","deletestorage","event","list","slice","target","value","addVolume","element","map","i","key","resetPrev"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ButtonPair from './ButtonPair';\nimport StorageBlock from './StorageBlock';\nimport './StorageNetwork.css';\n\ninterface IProps{\n  resetPrev:()=>void;\n  handleform:(i:any)=>void;\n}\n\nfunction StorageNetwork(props: IProps){\n\n  const [currentForm,setCurrentForm]=useState<any>({\n    storage:[{\n    type:\"SSD\",\n    volume:\"root\",\n    capacity:50,\n    encrypted:false,\n    iops:100,\n    backup:false,\n    remarks:\"\"}],\n    network:-1});\n\n  function handleform(){\n    props.handleform(currentForm);\n  }\n\n  function deletestorage(event:any){\n      let list=[...currentForm.storage]\n      list=list.slice(event.target.value,1);\n      setCurrentForm({...currentForm,storage:list})\n  }\n\n  function addVolume(){\n      let list=[...currentForm.storage]\n      let element={\n        type:\"SSD\",\n        volume:\"ext\",\n        capacity:50,\n        encrypted:false,\n        iops:100,\n        backup:false,\n        remarks:\"\"}\n        list\n      setCurrentForm({...currentForm,storage:list})\n  }\n\n  return(\n   <div>\n     {\n       currentForm.storage.map((i:any,key:number)=>(\n     <div className=\"postion\">\n     <StorageBlock form={currentForm} index={key} setCurrentForm={setCurrentForm} />\n     <div>\n       {\n       i.volume!==\"root\"?\n          <button className=\"cross-btn\" value=\"0\" onClick={deletestorage}>X</button>\n          :null\n       }           \n     </div>\n     </div>\n       ))\n      }\n     <div>\n       <button className=\"volume\" onClick={addVolume}>Add Volume</button>\n     </div> \n     <div> \n       <h1 className=\"heading-network\">Network Bandwidth Configuration</h1>\n       <p className=\"data\">Outbounded Traffic</p>\n       <div className=\"slidecontainer\">\n        <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" className=\"slider\" id=\"myRange\"/>\n        </div>\n        <div className=\"network-range\">\n            <p>256GB</p><p>2TB</p>\n        </div>\n     </div>\n     <div> \n       <ButtonPair firsttext=\"Back\" firstfunction={props.resetPrev} secondtext=\"Proceed\" secondfunction={handleform} />\n     </div>\n    </div> \n  )\n  } \n\nexport default StorageNetwork;"]},"metadata":{},"sourceType":"module"}