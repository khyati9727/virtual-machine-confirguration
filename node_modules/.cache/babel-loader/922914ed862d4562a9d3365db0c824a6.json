{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasher/Desktop/workspace/virtual-machine-configuration/src/ChooseInstanceForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './ChooseInstanceForm.css';\nimport './App.css';\nimport ErrorPopUp from './ErrorPopUp';\nimport ButtonPair from './ButtonPair';\nconst instance = [{\n  instanceType: \"General Purpose\",\n  memory: [\"256 MB\", \"512 MB\", \"1 GB\", \"2 GB\", \"4 GB\"],\n  cpuCores: [1, 2, 4]\n}, {\n  instanceType: \"Storage Optimized\",\n  memory: [\"16 GB\", \"32 GB\", \"64 GB\"],\n  cpuCores: [1, 8, 16]\n}, {\n  instanceType: \"Compute Optimized\",\n  memory: [\"16 GB\", \"32 GB\", \"64 GB\"],\n  cpuCores: [1, 2, 8, 16]\n}, {\n  instanceType: \"Network Optimized\",\n  memory: [\"256 MB\", \"512 MB\", \"1 GB\", \"2 GB\", \"4 GB\", \"16 GB\", \"32 GB\", \"64 GB\"],\n  cpuCores: [1, 2, 4, 8, 16]\n}];\n\nfunction ChooseInstanceForm(props) {\n  _s();\n\n  var _instance$find, _instance$find2;\n\n  const [errorPop, setErrorPop] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n  const [currentForm, setCurrentForm] = useState({\n    instanceType: \"General Purpose\",\n    memory: \"\",\n    cpuCores: -1\n  });\n  useEffect(() => {}, []);\n\n  function handleform() {\n    if (currentForm.cpuCores === -1 || currentForm.memory === \"\") {\n      setErrorText(\"Please select all the fields, Instance Type, CPU Core and memory in order to Proceed.\");\n      setErrorPop(true);\n    } else {\n      console.log(\"sending App\");\n      props.handleform(currentForm);\n    }\n  }\n\n  function handletypechange(event) {\n    let name = event.target.value;\n    let i = instance.find(e => e.instanceType === name);\n\n    if (i !== undefined) {\n      let cpu;\n\n      if (i.cpuCores !== undefined) {\n        i.cpuCores.forEach(element => {\n          //CHECKING CPU TYPE AVAILABLE\n          // eslint-disable-next-line eqeqeq\n          if (element == currentForm.cpuCores) {\n            cpu = true;\n            return;\n          }\n        });\n      }\n\n      let mem = i.memory.includes(currentForm.memory); //CHECKING MENU AVAILABLE\n\n      cpu = currentForm.cpuCores === -1 ? true : cpu; //IF PREVIOUSLY SELECTED CPU\n\n      mem = currentForm.memory === \"\" ? true : mem; //IF PREVIOUSLY SELECTED MEMORY\n\n      let keywordcpu = \"CPU Cores - \";\n      let extension = \" cores\";\n      let keywordmemory = \"Memory - \";\n      let list = []; // if(currentForm.cpuCores!==-1 && cpu){\n      //     let menu:any = document.getElementById(\"cpu\"); \n      //     let option:any = document.getElementById(\"hidden\"); \n      //     console.log(option)\n      //     console.log(menu)\n      //     option.value=currentForm.cpuCores.toString\n      //     console.log(option)\n      //     menu.value=option.value;\n      // }\n\n      if (!cpu && !mem) {\n        setErrorText(currentForm.cpuCores + \"cpu core and \" + currentForm.memory + \" are not available for \" + name);\n        setErrorPop(true);\n        setCurrentForm({\n          instanceType: event.target.value,\n          cpuCores: -1,\n          memory: \"\"\n        });\n        var d = document.getElementById(\"cpu\");\n        d.value = \"CPU Cores\";\n        var b = document.getElementById(\"memory\");\n        b.value = \"Memory\";\n        list = [...props.estimation.items.filter(e => e.item !== keywordcpu + 8 + extension && e.item !== keywordcpu + 16 + extension && e.item !== keywordmemory + \"64 GB\" && e.item !== keywordmemory + \"32 GB\")];\n        props.setEstimation({\n          items: list\n        });\n      } else if (!cpu) {\n        setErrorText(currentForm.cpuCores + \"cpu core is not available for \" + name);\n        setErrorPop(true);\n        setCurrentForm({ ...currentForm,\n          instanceType: event.target.value,\n          cpuCores: -1\n        });\n        var x = document.getElementById(\"cpu\");\n        x.value = \"CPU Cores\";\n        list = [...props.estimation.items.filter(e => e.item !== keywordcpu + 8 + extension && e.item !== keywordcpu + 16 + extension)];\n        props.setEstimation({\n          items: list\n        });\n      } else if (!mem) {\n        setErrorText(currentForm.memory + \" is not available for \" + name);\n        setErrorPop(true);\n        setCurrentForm({ ...currentForm,\n          instanceType: event.target.value,\n          memory: \"\"\n        });\n        var y = document.getElementById(\"memory\");\n        y.value = \"Memory\";\n        list = [...props.estimation.items.filter(e => e.item !== keywordmemory + \"64 GB\" && e.item !== keywordmemory + \"32 GB\")];\n        props.setEstimation({\n          items: list\n        });\n      } else {\n        setCurrentForm({ ...currentForm,\n          instanceType: event.target.value\n        });\n      }\n    }\n  }\n\n  function close() {\n    setErrorPop(false);\n  }\n\n  function handlecpu(e) {\n    let keyword = \"CPU Cores - \";\n    let value = e.target.value;\n    let extension = \" cores\";\n    console.log(\"handle CPU\");\n    let list = [];\n    let t = 0;\n\n    if (currentForm.cpuCores !== value) {\n      list = [...props.estimation.items.filter(e => e.item !== keyword + 8 + extension && e.item !== keyword + 16 + extension)];\n    } // eslint-disable-next-line eqeqeq\n\n\n    if (value == 8) {\n      list.push({\n        item: keyword + value + extension,\n        cost: 20\n      });\n      t = props.estimation.total;\n      t = t + 20;\n    } // eslint-disable-next-line eqeqeq\n\n\n    if (value == 16) {\n      list.push({\n        item: keyword + value + extension,\n        cost: 40\n      });\n      t = props.estimation.total;\n      t = t + 40;\n    }\n\n    setCurrentForm({ ...currentForm,\n      cpuCores: value\n    });\n    props.setEstimation({\n      items: list,\n      total: t\n    });\n  }\n\n  function handlememory(e) {\n    let keyword = \"Memory - \";\n    let value = e.target.value;\n    let list = [];\n    let t = 0;\n\n    if (currentForm.memory !== value) {\n      list = [...props.estimation.items.filter(e => e.item !== keyword + \"64 GB\" && e.item !== keyword + \"32 GB\")];\n    }\n\n    if (value === \"32 GB\") {\n      list.push({\n        item: keyword + value,\n        cost: 20\n      });\n      t = props.estimation.total;\n      t = t + 20;\n    }\n\n    if (value === \"64 GB\") {\n      list.push({\n        item: keyword + value,\n        cost: 40\n      });\n      t = props.estimation.total;\n      t = t + 40;\n    }\n\n    setCurrentForm({ ...currentForm,\n      memory: value\n    });\n    props.setEstimation({\n      items: list,\n      total: t\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsrow\",\n      children: [instance.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: item.instanceType === currentForm.instanceType ? \"activeblock\" : \"block\",\n        value: item.instanceType,\n        onClick: e => handletypechange(e),\n        children: item.instanceType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headingform2\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menurow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menubox\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"menu\",\n          id: \"cpu\",\n          onClick: handlecpu,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"hidden\",\n            value: \"\",\n            hidden: true,\n            children: \"CPU Cores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), (_instance$find = instance.find(i => i.instanceType === currentForm.instanceType)) === null || _instance$find === void 0 ? void 0 : _instance$find.cpuCores.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"option\",\n            id: currentForm.instanceType + \"\" + e,\n            value: e,\n            children: [e, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 14\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menubox\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"menu\",\n          id: \"memory\",\n          onClick: handlememory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            hidden: true,\n            children: \"Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), (_instance$find2 = instance.find(i => i.instanceType === currentForm.instanceType)) === null || _instance$find2 === void 0 ? void 0 : _instance$find2.memory.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"option\",\n            id: i,\n            value: i,\n            children: [i, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonPair, {\n        firsttext: \"Back\",\n        firstfunction: props.resetPrev,\n        secondtext: \"Proceed\",\n        secondfunction: handleform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorPop ? /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n        text: errorText,\n        handlebutton: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChooseInstanceForm, \"m2ltTQJSRi/DFKZ/myOAIiKSLvU=\");\n\n_c = ChooseInstanceForm;\nexport default ChooseInstanceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseInstanceForm\");","map":{"version":3,"sources":["/home/hasher/Desktop/workspace/virtual-machine-configuration/src/ChooseInstanceForm.tsx"],"names":["React","useEffect","useState","ErrorPopUp","ButtonPair","instance","instanceType","memory","cpuCores","ChooseInstanceForm","props","errorPop","setErrorPop","errorText","setErrorText","currentForm","setCurrentForm","handleform","console","log","handletypechange","event","name","target","value","i","find","e","undefined","cpu","forEach","element","mem","includes","keywordcpu","extension","keywordmemory","list","d","document","getElementById","b","estimation","items","filter","item","setEstimation","x","y","close","handlecpu","keyword","t","push","cost","total","handlememory","map","resetPrev"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ChooseInstanceForm.css';\nimport './App.css'\nimport ErrorPopUp from './ErrorPopUp';\nimport ButtonPair from './ButtonPair';\nimport { Cost } from './App';\n\nexport interface Instance{\n    instanceType:string,\n    memory:string[],\n    cpuCores:number[]\n}\n\nconst instance:Instance[]=[{\n    instanceType:\"General Purpose\",\n    memory:[\"256 MB\",\"512 MB\",\"1 GB\",\"2 GB\",\"4 GB\"],\n    cpuCores:[1,2,4]\n},\n{\n    instanceType:\"Storage Optimized\",\n    memory:[\"16 GB\",\"32 GB\",\"64 GB\"],\n    cpuCores:[1,8,16]\n},\n{\n    instanceType:\"Compute Optimized\",\n    memory:[\"16 GB\",\"32 GB\",\"64 GB\"],\n    cpuCores:[1,2,8,16]\n},\n{\n    instanceType:\"Network Optimized\",\n    memory:[\"256 MB\",\"512 MB\",\"1 GB\",\"2 GB\",\"4 GB\",\"16 GB\",\"32 GB\",\"64 GB\"],\n    cpuCores:[1,2,4,8,16]\n}\n]    \n\nfunction ChooseInstanceForm (props:any){\n\n    const [errorPop,setErrorPop]=useState(false);\n    const [errorText,setErrorText]=useState(\"\");\n    const [currentForm,setCurrentForm]=useState({\n        instanceType:\"General Purpose\",\n        memory:\"\",\n        cpuCores:-1\n        })\n        \n        useEffect(() => {\n            \n        }, [])\n\n    function handleform(){\n        if(currentForm.cpuCores===-1 || currentForm.memory===\"\"){\n            setErrorText(\"Please select all the fields, Instance Type, CPU Core and memory in order to Proceed.\")\n            setErrorPop(true);\n        }\n        else{\n            console.log(\"sending App\")\n            props.handleform(currentForm);\n\n        }        \n    }   \n        function handletypechange(event:any){            \n           \n            let name:string=event.target.value;\n            let i:any=instance.find(e=>e.instanceType===name);\n            if(i!==undefined){\n            let cpu;\n            if(i.cpuCores!==undefined){\n            i.cpuCores.forEach((element:any) => {       //CHECKING CPU TYPE AVAILABLE\n                // eslint-disable-next-line eqeqeq\n                if(element==currentForm.cpuCores){\n                    cpu=true;\n                    return\n                }\n            });\n            }\n            let mem=i.memory.includes(currentForm.memory);  //CHECKING MENU AVAILABLE\n            cpu=currentForm.cpuCores===-1?true:cpu;         //IF PREVIOUSLY SELECTED CPU\n            mem=currentForm.memory===\"\"?true:mem;           //IF PREVIOUSLY SELECTED MEMORY\n            let keywordcpu:string=\"CPU Cores - \";\n            let extension:string=\" cores\"\n            let keywordmemory:string=\"Memory - \";\n            let list=[];\n\n            // if(currentForm.cpuCores!==-1 && cpu){\n            //     let menu:any = document.getElementById(\"cpu\"); \n            //     let option:any = document.getElementById(\"hidden\"); \n            //     console.log(option)\n            //     console.log(menu)\n            //     option.value=currentForm.cpuCores.toString\n            //     console.log(option)\n            //     menu.value=option.value;\n            // }\n            if(!cpu && !mem){\n                setErrorText(currentForm.cpuCores+\"cpu core and \"+currentForm.memory+\" are not available for \"+name)\n                setErrorPop(true)\n                setCurrentForm({instanceType:event.target.value,cpuCores:-1,memory:\"\"})\n                var d:any = document.getElementById(\"cpu\"); \n                d.value=\"CPU Cores\";   \n                var b:any=document.getElementById(\"memory\"); \n                b.value=\"Memory\";    \n                list=[...props.estimation.items.filter((e:any)=>e.item!==keywordcpu+8+extension && e.item!==keywordcpu+16+extension && e.item!==keywordmemory+\"64 GB\" && e.item!==keywordmemory+\"32 GB\")]    \n                props.setEstimation({items:list})\n            }\n            else if(!cpu){\n                setErrorText(currentForm.cpuCores+\"cpu core is not available for \"+name)\n                setErrorPop(true)\n                setCurrentForm({...currentForm,instanceType:event.target.value,cpuCores:-1})\n                var x:any = document.getElementById(\"cpu\"); \n                x.value=\"CPU Cores\"; \n                list=[...props.estimation.items.filter((e:any)=>e.item!==keywordcpu+8+extension && e.item!==keywordcpu+16+extension)]    \n                props.setEstimation({items:list})\n            }\n            else if(!mem){\n                setErrorText(currentForm.memory+\" is not available for \"+name)\n                setErrorPop(true)\n                setCurrentForm({...currentForm,instanceType:event.target.value,memory:\"\"})\n                var y:any=document.getElementById(\"memory\"); \n                y.value=\"Memory\";  \n                list=[...props.estimation.items.filter((e:any)=>e.item!==keywordmemory+\"64 GB\" && e.item!==keywordmemory+\"32 GB\")]\n                props.setEstimation({items:list})\n            }\n\n            else{\n                setCurrentForm({...currentForm,instanceType:event.target.value});\n            }\n                \n        }\n        }\n\n        function close(){\n            setErrorPop(false)\n        }\n\n        function handlecpu(e:any){\n            let keyword:string=\"CPU Cores - \";\n            let value=e.target.value;\n            let extension:string=\" cores\"\n            console.log(\"handle CPU\")\n            let list:Cost[]=[];\n            let t=0;\n            if(currentForm.cpuCores!==value){\n              list=[...props.estimation.items.filter((e:any)=>e.item!==keyword+8+extension && e.item!==keyword+16+extension)]\n            }\n            // eslint-disable-next-line eqeqeq\n            if(value==8){\n                list.push({item:keyword+value+extension,cost:20});\n                t=props.estimation.total; \n                t=t+20;\n            }\n            // eslint-disable-next-line eqeqeq\n            if(value==16){\n                list.push({item:keyword+value+extension,cost:40});\n                t=props.estimation.total;\n                t=t+40;                \n            }\n            setCurrentForm({...currentForm,cpuCores:value})\n            props.setEstimation({items:list,total:t})\n          \n        }\n\n        function handlememory(e:any){\n            let keyword:string=\"Memory - \";\n            let value=e.target.value;\n            let list:Cost[]=[];\n            let t=0;\n            if(currentForm.memory!==value){\n              list=[...props.estimation.items.filter((e:any)=>e.item!==keyword+\"64 GB\" && e.item!==keyword+\"32 GB\")]\n            }\n            if(value===\"32 GB\"){\n                list.push({item:keyword+value,cost:20});\n                t=props.estimation.total; \n                t=t+20;\n            }\n            if(value===\"64 GB\"){\n                list.push({item:keyword+value,cost:40});\n                t=props.estimation.total;\n                t=t+40;                \n            }\n            setCurrentForm({...currentForm,memory:value})\n            props.setEstimation({items:list,total:t})\n    }\n    return(\n        <div>\n    <div className=\"optionsrow\">\n        {\n            instance.map((item:Instance) => (\n                <button  className={item.instanceType===currentForm.instanceType?\"activeblock\":\"block\"} value={item.instanceType} onClick={(e)=>handletypechange(e)}>\n                    {item.instanceType}\n                    </button>\n                ))\n        }\n        <div>\n\n        </div>\n    </div>\n    <div className=\"headingform2\"> \n        <h3>Create Configuration</h3>\n    </div>\n    <div className=\"menurow\">\n    <div className=\"menubox\">\n       \n        <select className=\"menu\" id=\"cpu\" onClick={handlecpu}>\n              <option id=\"hidden\" value=\"\" hidden>CPU Cores</option>\n              {\n              instance.find((i:Instance)=>i.instanceType ===currentForm.instanceType)?.cpuCores.map((e)=>\n             <option className=\"option\" id={currentForm.instanceType+\"\"+e} value={e} >{e} </option>)\n      }\n          </select>\n          </div>     \n          <div className=\"menubox\">\n              <select className=\"menu\" id=\"memory\" onClick={handlememory}>\n              <option hidden>Memory</option>\n              {\n              instance.find((i:Instance)=>i.instanceType ===currentForm.instanceType)?.memory.map((i)=>\n              <option className=\"option\" id={i} value={i} >{i} </option>)\n      }\n          </select>\n          </div>     \n    </div>\n    <div>\n        <ButtonPair firsttext=\"Back\" firstfunction={props.resetPrev} secondtext=\"Proceed\" secondfunction={handleform}/>\n    </div>\n    <div>\n        { errorPop?\n            <ErrorPopUp text={errorText} handlebutton={close}/>\n            :null\n        }\n    </div>\n</div>\n\n    )\n}\n\nexport default ChooseInstanceForm;"]},"metadata":{},"sourceType":"module"}